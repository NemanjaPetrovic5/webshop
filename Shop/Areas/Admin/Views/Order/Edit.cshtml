@model Shop.Models.ViewModels.EditOrderViewModel

@{
    ViewBag.Title = "Edit order";
}

<div class="container-fluid">
    <div class="row">
        <div class="add-prod">
            <h4>Edit Order</h4>
        </div>

        <div class="col-lg-6">
            <div class="card1">
                <h4>Order</h4>

                @using (Html.BeginForm("Edit", "Order", FormMethod.Post, new { enctype = "multipart/form-data" }))

                {
                    @Html.AntiForgeryToken()

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Order.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.TotalPrice, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Order.TotalPrice, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                            @Html.ValidationMessageFor(model => model.Order.TotalPrice, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Order.FirstName, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                            @Html.ValidationMessageFor(model => model.Order.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order.LastName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Order.LastName, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.City, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Order.City, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                        @Html.ValidationMessageFor(model => model.Order.City, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Order.Address, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                        @Html.ValidationMessageFor(model => model.Order.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.PostCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Order.PostCode, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                        @Html.ValidationMessageFor(model => model.Order.PostCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.Phone, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Order.Phone, new { htmlAttributes = new { @class = "form-control", style = "max-width:100% !important;" } })
                        @Html.ValidationMessageFor(model => model.Order.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Order.OrderStatusId)
                        @Html.DropDownListFor(m => m.Order.OrderStatusId, new
                        SelectList(Model.OrderStatuss, "Id", "Name"), new
                        {
                            @class = "form-control",
                            style = "max-width:100% !important;"
                        })
                    </div>

                    <div class="form-group col-md-offset-5">
                        <input type="submit" class="btn btn-primary" value="Save" />
                    </div>
            }
            </div>
        </div>
    </div>
</div>